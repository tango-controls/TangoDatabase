//=============================================================================
//
// file :         DataBasePurgeClass.h
//
// description :  Include for the DataBasePurgeClass root class.
//                This class is represents the singleton class for
//                the DataBasePurge device class.
//                It contains all properties and methods which the 
//                DataBasePurge requires only once e.g. the commands.
//			
// project :      TANGO Device Server
//
// $Author$
//
// $Revision$
//
// $Log$
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#ifndef _DATABASEPURGECLASS_H
#define _DATABASEPURGECLASS_H

#include <tango.h>
#include <DataBasePurge.h>


namespace DataBasePurge_ns
{
//=====================================
//	Define classes for attributes
//=====================================
//=========================================
//	Define classes for commands
//=========================================
//
// The DataBasePurgeClass singleton definition
//

class DataBasePurgeClass : public Tango::DeviceClass
{
public:
//	properties member data

//	add your own data members here
//------------------------------------

public:
	Tango::DbData	cl_prop;
	Tango::DbData	cl_def_prop;
	Tango::DbData	dev_def_prop;

//	Method prototypes
	static DataBasePurgeClass *init(const char *);
	static DataBasePurgeClass *instance();
	~DataBasePurgeClass();
	Tango::DbDatum	get_class_property(string &);
	Tango::DbDatum	get_default_device_property(string &);
	Tango::DbDatum	get_default_class_property(string &);
	
protected:
	DataBasePurgeClass(string &);
	static DataBasePurgeClass *_instance;
	void command_factory();
	void get_class_property();
	void write_class_property();
	void set_default_property();

private:
	void device_factory(const Tango::DevVarStringArray *);
};


}	//	namespace DataBasePurge_ns

#endif // _DATABASEPURGECLASS_H
