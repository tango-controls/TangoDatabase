/*----- PROTECTED REGION ID(DataBaseStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id$";
//=============================================================================
//
// file :        DataBaseStateMachine.cpp
//
// description : C++ source for the �name� and its alowed
//               methods for commands and attributes
//
// project :     TANGO.
//
// $Author$
//
// Copyright (C) :      2004,2005,2006,2007,2008,2009,2010,2011,2012,2013
//						European Synchrotron Radiation Facility
//                      BP 220, Grenoble 38043
//                      FRANCE
//
// This file is part of Tango.
//
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
//
// $Revision$
// $Date$
//
// $HeadURL:$
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================



#include <DataBase.h>
#include <DataBaseClass.h>

/*----- PROTECTED REGION END -----*/	//	DataBase::DataBaseStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace DataBase_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_StoredProcedureRelease_allowed()
 *	Description : Execution allowed for StoredProcedureRelease attribute
 */
//--------------------------------------------------------
bool DataBase::is_StoredProcedureRelease_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for StoredProcedureRelease attribute in read access.
	/*----- PROTECTED REGION ID(DataBase::StoredProcedureReleaseStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::StoredProcedureReleaseStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_Timing_average_allowed()
 *	Description : Execution allowed for Timing_average attribute
 */
//--------------------------------------------------------
bool DataBase::is_Timing_average_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Timing_average attribute in read access.
	/*----- PROTECTED REGION ID(DataBase::Timing_averageStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::Timing_averageStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_Timing_minimum_allowed()
 *	Description : Execution allowed for Timing_minimum attribute
 */
//--------------------------------------------------------
bool DataBase::is_Timing_minimum_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Timing_minimum attribute in read access.
	/*----- PROTECTED REGION ID(DataBase::Timing_minimumStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::Timing_minimumStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_Timing_maximum_allowed()
 *	Description : Execution allowed for Timing_maximum attribute
 */
//--------------------------------------------------------
bool DataBase::is_Timing_maximum_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Timing_maximum attribute in read access.
	/*----- PROTECTED REGION ID(DataBase::Timing_maximumStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::Timing_maximumStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_Timing_calls_allowed()
 *	Description : Execution allowed for Timing_calls attribute
 */
//--------------------------------------------------------
bool DataBase::is_Timing_calls_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Timing_calls attribute in read access.
	/*----- PROTECTED REGION ID(DataBase::Timing_callsStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::Timing_callsStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_Timing_index_allowed()
 *	Description : Execution allowed for Timing_index attribute
 */
//--------------------------------------------------------
bool DataBase::is_Timing_index_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Timing_index attribute in read access.
	/*----- PROTECTED REGION ID(DataBase::Timing_indexStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::Timing_indexStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_Timing_info_allowed()
 *	Description : Execution allowed for Timing_info attribute
 */
//--------------------------------------------------------
bool DataBase::is_Timing_info_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Timing_info attribute in read access.
	/*----- PROTECTED REGION ID(DataBase::Timing_infoStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::Timing_infoStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbAddDevice_allowed()
 *	Description : Execution allowed for DbAddDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbAddDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbAddDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbAddDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbAddDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbAddServer_allowed()
 *	Description : Execution allowed for DbAddServer attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbAddServer_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbAddServer command.
	/*----- PROTECTED REGION ID(DataBase::DbAddServerStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbAddServerStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteAttributeAlias_allowed()
 *	Description : Execution allowed for DbDeleteAttributeAlias attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteAttributeAlias_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteAttributeAlias command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteAttributeAliasStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteAttributeAliasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteClassAttribute_allowed()
 *	Description : Execution allowed for DbDeleteClassAttribute attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteClassAttribute_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteClassAttribute command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteClassAttributeStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteClassAttributeStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteClassAttributeProperty_allowed()
 *	Description : Execution allowed for DbDeleteClassAttributeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteClassAttributeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteClassAttributeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteClassAttributePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteClassAttributePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteClassProperty_allowed()
 *	Description : Execution allowed for DbDeleteClassProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteClassProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteClassProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteClassPropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteClassPropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteDevice_allowed()
 *	Description : Execution allowed for DbDeleteDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteDeviceAlias_allowed()
 *	Description : Execution allowed for DbDeleteDeviceAlias attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteDeviceAlias_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteDeviceAlias command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteDeviceAliasStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteDeviceAliasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteDeviceAttribute_allowed()
 *	Description : Execution allowed for DbDeleteDeviceAttribute attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteDeviceAttribute_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteDeviceAttribute command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteDeviceAttributeStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteDeviceAttributeStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteDeviceAttributeProperty_allowed()
 *	Description : Execution allowed for DbDeleteDeviceAttributeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteDeviceAttributeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteDeviceAttributeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteDeviceAttributePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteDeviceAttributePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteDeviceProperty_allowed()
 *	Description : Execution allowed for DbDeleteDeviceProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteDeviceProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteDeviceProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteDevicePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteDevicePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteProperty_allowed()
 *	Description : Execution allowed for DbDeleteProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeletePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeletePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteServer_allowed()
 *	Description : Execution allowed for DbDeleteServer attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteServer_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteServer command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteServerStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteServerStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteServerInfo_allowed()
 *	Description : Execution allowed for DbDeleteServerInfo attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteServerInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteServerInfo command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteServerInfoStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteServerInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbExportDevice_allowed()
 *	Description : Execution allowed for DbExportDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbExportDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbExportDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbExportDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbExportDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbExportEvent_allowed()
 *	Description : Execution allowed for DbExportEvent attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbExportEvent_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbExportEvent command.
	/*----- PROTECTED REGION ID(DataBase::DbExportEventStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbExportEventStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetAliasDevice_allowed()
 *	Description : Execution allowed for DbGetAliasDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetAliasDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetAliasDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbGetAliasDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetAliasDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetAttributeAlias_allowed()
 *	Description : Execution allowed for DbGetAttributeAlias attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetAttributeAlias_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetAttributeAlias command.
	/*----- PROTECTED REGION ID(DataBase::DbGetAttributeAliasStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetAttributeAliasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetAttributeAliasList_allowed()
 *	Description : Execution allowed for DbGetAttributeAliasList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetAttributeAliasList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetAttributeAliasList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetAttributeAliasListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetAttributeAliasListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassAttributeList_allowed()
 *	Description : Execution allowed for DbGetClassAttributeList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassAttributeList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassAttributeList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassAttributeListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassAttributeListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassAttributeProperty_allowed()
 *	Description : Execution allowed for DbGetClassAttributeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassAttributeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassAttributeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassAttributePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassAttributePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassAttributeProperty2_allowed()
 *	Description : Execution allowed for DbGetClassAttributeProperty2 attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassAttributeProperty2_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassAttributeProperty2 command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassAttributeProperty2StateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassAttributeProperty2StateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassAttributePropertyHist_allowed()
 *	Description : Execution allowed for DbGetClassAttributePropertyHist attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassAttributePropertyHist_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassAttributePropertyHist command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassAttributePropertyHistStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassAttributePropertyHistStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassForDevice_allowed()
 *	Description : Execution allowed for DbGetClassForDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassForDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassForDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassForDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassForDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassInheritanceForDevice_allowed()
 *	Description : Execution allowed for DbGetClassInheritanceForDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassInheritanceForDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassInheritanceForDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassInheritanceForDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassInheritanceForDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassList_allowed()
 *	Description : Execution allowed for DbGetClassList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassProperty_allowed()
 *	Description : Execution allowed for DbGetClassProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassPropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassPropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassPropertyHist_allowed()
 *	Description : Execution allowed for DbGetClassPropertyHist attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassPropertyHist_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassPropertyHist command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassPropertyHistStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassPropertyHistStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassPropertyList_allowed()
 *	Description : Execution allowed for DbGetClassPropertyList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassPropertyList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassPropertyList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassPropertyListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassPropertyListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceAlias_allowed()
 *	Description : Execution allowed for DbGetDeviceAlias attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceAlias_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceAlias command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceAliasStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceAliasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceAliasList_allowed()
 *	Description : Execution allowed for DbGetDeviceAliasList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceAliasList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceAliasList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceAliasListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceAliasListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceAttributeList_allowed()
 *	Description : Execution allowed for DbGetDeviceAttributeList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceAttributeList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceAttributeList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceAttributeListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceAttributeListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceAttributeProperty_allowed()
 *	Description : Execution allowed for DbGetDeviceAttributeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceAttributeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceAttributeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceAttributePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceAttributePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceAttributeProperty2_allowed()
 *	Description : Execution allowed for DbGetDeviceAttributeProperty2 attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceAttributeProperty2_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceAttributeProperty2 command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceAttributeProperty2StateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceAttributeProperty2StateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceAttributePropertyHist_allowed()
 *	Description : Execution allowed for DbGetDeviceAttributePropertyHist attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceAttributePropertyHist_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceAttributePropertyHist command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceAttributePropertyHistStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceAttributePropertyHistStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceClassList_allowed()
 *	Description : Execution allowed for DbGetDeviceClassList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceClassList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceClassList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceClassListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceClassListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceDomainList_allowed()
 *	Description : Execution allowed for DbGetDeviceDomainList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceDomainList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceDomainList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceDomainListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceDomainListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceExportedList_allowed()
 *	Description : Execution allowed for DbGetDeviceExportedList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceExportedList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceExportedList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceExportedListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceExportedListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceFamilyList_allowed()
 *	Description : Execution allowed for DbGetDeviceFamilyList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceFamilyList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceFamilyList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceFamilyListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceFamilyListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceInfo_allowed()
 *	Description : Execution allowed for DbGetDeviceInfo attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceInfo command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceInfoStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceList_allowed()
 *	Description : Execution allowed for DbGetDeviceList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceWideList_allowed()
 *	Description : Execution allowed for DbGetDeviceWideList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceWideList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceWideList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceWideListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceWideListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceMemberList_allowed()
 *	Description : Execution allowed for DbGetDeviceMemberList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceMemberList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceMemberList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceMemberListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceMemberListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceProperty_allowed()
 *	Description : Execution allowed for DbGetDeviceProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDevicePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDevicePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDevicePropertyHist_allowed()
 *	Description : Execution allowed for DbGetDevicePropertyHist attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDevicePropertyHist_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDevicePropertyHist command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDevicePropertyHistStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDevicePropertyHistStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDevicePropertyList_allowed()
 *	Description : Execution allowed for DbGetDevicePropertyList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDevicePropertyList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDevicePropertyList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDevicePropertyListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDevicePropertyListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDeviceServerClassList_allowed()
 *	Description : Execution allowed for DbGetDeviceServerClassList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDeviceServerClassList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDeviceServerClassList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDeviceServerClassListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDeviceServerClassListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetExportdDeviceListForClass_allowed()
 *	Description : Execution allowed for DbGetExportdDeviceListForClass attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetExportdDeviceListForClass_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetExportdDeviceListForClass command.
	/*----- PROTECTED REGION ID(DataBase::DbGetExportdDeviceListForClassStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetExportdDeviceListForClassStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetHostList_allowed()
 *	Description : Execution allowed for DbGetHostList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetHostList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetHostList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetHostListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetHostListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetHostServerList_allowed()
 *	Description : Execution allowed for DbGetHostServerList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetHostServerList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetHostServerList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetHostServerListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetHostServerListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetHostServersInfo_allowed()
 *	Description : Execution allowed for DbGetHostServersInfo attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetHostServersInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetHostServersInfo command.
	/*----- PROTECTED REGION ID(DataBase::DbGetHostServersInfoStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetHostServersInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetInstanceNameList_allowed()
 *	Description : Execution allowed for DbGetInstanceNameList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetInstanceNameList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetInstanceNameList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetInstanceNameListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetInstanceNameListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetObjectList_allowed()
 *	Description : Execution allowed for DbGetObjectList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetObjectList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetObjectList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetObjectListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetObjectListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetProperty_allowed()
 *	Description : Execution allowed for DbGetProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbGetPropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetPropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetPropertyHist_allowed()
 *	Description : Execution allowed for DbGetPropertyHist attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetPropertyHist_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetPropertyHist command.
	/*----- PROTECTED REGION ID(DataBase::DbGetPropertyHistStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetPropertyHistStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetPropertyList_allowed()
 *	Description : Execution allowed for DbGetPropertyList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetPropertyList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetPropertyList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetPropertyListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetPropertyListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetServerInfo_allowed()
 *	Description : Execution allowed for DbGetServerInfo attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetServerInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetServerInfo command.
	/*----- PROTECTED REGION ID(DataBase::DbGetServerInfoStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetServerInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetServerList_allowed()
 *	Description : Execution allowed for DbGetServerList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetServerList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetServerList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetServerListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetServerListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetServerNameList_allowed()
 *	Description : Execution allowed for DbGetServerNameList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetServerNameList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetServerNameList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetServerNameListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetServerNameListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbImportDevice_allowed()
 *	Description : Execution allowed for DbImportDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbImportDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbImportDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbImportDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbImportDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbImportEvent_allowed()
 *	Description : Execution allowed for DbImportEvent attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbImportEvent_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbImportEvent command.
	/*----- PROTECTED REGION ID(DataBase::DbImportEventStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbImportEventStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbInfo_allowed()
 *	Description : Execution allowed for DbInfo attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbInfo command.
	/*----- PROTECTED REGION ID(DataBase::DbInfoStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutAttributeAlias_allowed()
 *	Description : Execution allowed for DbPutAttributeAlias attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutAttributeAlias_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutAttributeAlias command.
	/*----- PROTECTED REGION ID(DataBase::DbPutAttributeAliasStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutAttributeAliasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutClassAttributeProperty_allowed()
 *	Description : Execution allowed for DbPutClassAttributeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutClassAttributeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutClassAttributeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbPutClassAttributePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutClassAttributePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutClassAttributeProperty2_allowed()
 *	Description : Execution allowed for DbPutClassAttributeProperty2 attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutClassAttributeProperty2_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutClassAttributeProperty2 command.
	/*----- PROTECTED REGION ID(DataBase::DbPutClassAttributeProperty2StateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutClassAttributeProperty2StateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutClassProperty_allowed()
 *	Description : Execution allowed for DbPutClassProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutClassProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutClassProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbPutClassPropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutClassPropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutDeviceAlias_allowed()
 *	Description : Execution allowed for DbPutDeviceAlias attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutDeviceAlias_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutDeviceAlias command.
	/*----- PROTECTED REGION ID(DataBase::DbPutDeviceAliasStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutDeviceAliasStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutDeviceAttributeProperty_allowed()
 *	Description : Execution allowed for DbPutDeviceAttributeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutDeviceAttributeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutDeviceAttributeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbPutDeviceAttributePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutDeviceAttributePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutDeviceAttributeProperty2_allowed()
 *	Description : Execution allowed for DbPutDeviceAttributeProperty2 attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutDeviceAttributeProperty2_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutDeviceAttributeProperty2 command.
	/*----- PROTECTED REGION ID(DataBase::DbPutDeviceAttributeProperty2StateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutDeviceAttributeProperty2StateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutDeviceProperty_allowed()
 *	Description : Execution allowed for DbPutDeviceProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutDeviceProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutDeviceProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbPutDevicePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutDevicePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutProperty_allowed()
 *	Description : Execution allowed for DbPutProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbPutPropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutPropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutServerInfo_allowed()
 *	Description : Execution allowed for DbPutServerInfo attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutServerInfo_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutServerInfo command.
	/*----- PROTECTED REGION ID(DataBase::DbPutServerInfoStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutServerInfoStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbUnExportDevice_allowed()
 *	Description : Execution allowed for DbUnExportDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbUnExportDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbUnExportDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbUnExportDeviceStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbUnExportDeviceStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbUnExportEvent_allowed()
 *	Description : Execution allowed for DbUnExportEvent attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbUnExportEvent_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbUnExportEvent command.
	/*----- PROTECTED REGION ID(DataBase::DbUnExportEventStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbUnExportEventStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbUnExportServer_allowed()
 *	Description : Execution allowed for DbUnExportServer attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbUnExportServer_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbUnExportServer command.
	/*----- PROTECTED REGION ID(DataBase::DbUnExportServerStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbUnExportServerStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_ResetTimingValues_allowed()
 *	Description : Execution allowed for ResetTimingValues attribute
 */
//--------------------------------------------------------
bool DataBase::is_ResetTimingValues_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ResetTimingValues command.
	/*----- PROTECTED REGION ID(DataBase::ResetTimingValuesStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::ResetTimingValuesStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDataForServerCache_allowed()
 *	Description : Execution allowed for DbGetDataForServerCache attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDataForServerCache_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDataForServerCache command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDataForServerCacheStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDataForServerCacheStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteAllDeviceAttributeProperty_allowed()
 *	Description : Execution allowed for DbDeleteAllDeviceAttributeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteAllDeviceAttributeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteAllDeviceAttributeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteAllDeviceAttributePropertyStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteAllDeviceAttributePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbMySqlSelect_allowed()
 *	Description : Execution allowed for DbMySqlSelect attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbMySqlSelect_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbMySqlSelect command.
	/*----- PROTECTED REGION ID(DataBase::DbMySqlSelectStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbMySqlSelectStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetCSDbServerList_allowed()
 *	Description : Execution allowed for DbGetCSDbServerList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetCSDbServerList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetCSDbServerList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetCSDbServerListStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetCSDbServerListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetAttributeAlias2_allowed()
 *	Description : Execution allowed for DbGetAttributeAlias2 attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetAttributeAlias2_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetAttributeAlias2 command.
	/*----- PROTECTED REGION ID(DataBase::DbGetAttributeAlias2StateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetAttributeAlias2StateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetAliasAttribute_allowed()
 *	Description : Execution allowed for DbGetAliasAttribute attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetAliasAttribute_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetAliasAttribute command.
	/*----- PROTECTED REGION ID(DataBase::DbGetAliasAttributeStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetAliasAttributeStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbRenameServer_allowed()
 *	Description : Execution allowed for DbRenameServer attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbRenameServer_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbRenameServer command.
	/*----- PROTECTED REGION ID(DataBase::DbRenameServerStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbRenameServerStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassPipeProperty_allowed()
 *	Description : Execution allowed for DbGetClassPipeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassPipeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassPipeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassPipePropertyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassPipePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDevicePipeProperty_allowed()
 *	Description : Execution allowed for DbGetDevicePipeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDevicePipeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDevicePipeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDevicePipePropertyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDevicePipePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteClassPipe_allowed()
 *	Description : Execution allowed for DbDeleteClassPipe attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteClassPipe_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteClassPipe command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteClassPipeStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteClassPipeStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteDevicePipe_allowed()
 *	Description : Execution allowed for DbDeleteDevicePipe attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteDevicePipe_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteDevicePipe command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteDevicePipeStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteDevicePipeStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteClassPipeProperty_allowed()
 *	Description : Execution allowed for DbDeleteClassPipeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteClassPipeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteClassPipeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteClassPipePropertyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteClassPipePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteDevicePipeProperty_allowed()
 *	Description : Execution allowed for DbDeleteDevicePipeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteDevicePipeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteDevicePipeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteDevicePipePropertyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteDevicePipePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassPipeList_allowed()
 *	Description : Execution allowed for DbGetClassPipeList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassPipeList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassPipeList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassPipeListStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassPipeListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDevicePipeList_allowed()
 *	Description : Execution allowed for DbGetDevicePipeList attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDevicePipeList_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDevicePipeList command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDevicePipeListStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDevicePipeListStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbDeleteAllDevicePipeProperty_allowed()
 *	Description : Execution allowed for DbDeleteAllDevicePipeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbDeleteAllDevicePipeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbDeleteAllDevicePipeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbDeleteAllDevicePipePropertyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbDeleteAllDevicePipePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutClassPipeProperty_allowed()
 *	Description : Execution allowed for DbPutClassPipeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutClassPipeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutClassPipeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbPutClassPipePropertyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutClassPipePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbPutDevicePipeProperty_allowed()
 *	Description : Execution allowed for DbPutDevicePipeProperty attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbPutDevicePipeProperty_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbPutDevicePipeProperty command.
	/*----- PROTECTED REGION ID(DataBase::DbPutDevicePipePropertyStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbPutDevicePipePropertyStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetClassPipePropertyHist_allowed()
 *	Description : Execution allowed for DbGetClassPipePropertyHist attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetClassPipePropertyHist_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetClassPipePropertyHist command.
	/*----- PROTECTED REGION ID(DataBase::DbGetClassPipePropertyHistStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetClassPipePropertyHistStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetDevicePipePropertyHist_allowed()
 *	Description : Execution allowed for DbGetDevicePipePropertyHist attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetDevicePipePropertyHist_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetDevicePipePropertyHist command.
	/*----- PROTECTED REGION ID(DataBase::DbGetDevicePipePropertyHistStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetDevicePipePropertyHistStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : DataBase::is_DbGetForwardedAttributeListForDevice_allowed()
 *	Description : Execution allowed for DbGetForwardedAttributeListForDevice attribute
 */
//--------------------------------------------------------
bool DataBase::is_DbGetForwardedAttributeListForDevice_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for DbGetForwardedAttributeListForDevice command.
	/*----- PROTECTED REGION ID(DataBase::DbGetForwardedAttributeListForDeviceStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	DataBase::DbGetForwardedAttributeListForDeviceStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(DataBase::DataBaseStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	DataBase::DataBaseStateAllowed.AdditionalMethods

}	//	End of namespace
