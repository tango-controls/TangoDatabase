static const char *RcsId = "$Header$";
//+=============================================================================
//
// file :         StarterStateMachine.cpp
//
// description :  C++ source for the Starter and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author$
//
// Copyright (C) :      2004,2005,2006,2007,2008,2009,2010
//						European Synchrotron Radiation Facility
//                      BP 220, Grenoble 38043
//                      FRANCE
//
// This file is part of Tango.
//
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
//
// $Revision$
//
// $Log$
// Revision 3.5  2010/09/21 12:18:58  pascal_verdier
// GPL Licence added to header.
//
// Revision 3.4  2008/02/29 15:15:05  pascal_verdier
// Checking running processes by system call added.
//
// Revision 3.3  2006/04/24 07:06:28  pascal_verdier
// A thread is started for each level when at servers startup.
//
// Revision 3.2  2005/04/21 07:18:48  pascal_verdier
// Add a little timeout for ping.
// Fix a bug for windows (SIGCHLD).
//
// Revision 3.1  2004/12/10 08:57:19  pascal_verdier
// Tango 5 compatibility (attribute management).
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//=============================================================================

#include <tango.h>
#include <Starter.h>
#include <StarterClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace Starter_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		Starter::is_RunningServers_allowed
// 
// description : 	Read/Write allowed for RunningServers attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_RunningServers_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_StoppedServers_allowed
// 
// description : 	Read/Write allowed for StoppedServers attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_StoppedServers_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_Servers_allowed
// 
// description : 	Read/Write allowed for Servers attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_Servers_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_NotifdState_allowed
// 
// description : 	Read/Write allowed for NotifdState attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_NotifdState_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_HostState_allowed
// 
// description : 	Read/Write allowed for HostState attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_HostState_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStartAll_allowed
// 
// description : 	Execution allowed for DevStartAll command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStartAll_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStopAll_allowed
// 
// description : 	Execution allowed for DevStopAll command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStopAll_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevGetRunningServers_allowed
// 
// description : 	Execution allowed for DevGetRunningServers command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevGetRunningServers_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevGetStopServers_allowed
// 
// description : 	Execution allowed for DevGetStopServers command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevGetStopServers_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStart_allowed
// 
// description : 	Execution allowed for DevStart command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStart_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStop_allowed
// 
// description : 	Execution allowed for DevStop command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStop_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevReadLog_allowed
// 
// description : 	Execution allowed for DevReadLog command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevReadLog_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_UpdateServersInfo_allowed
// 
// description : 	Execution allowed for UpdateServersInfo command.
//
//-----------------------------------------------------------------------------
bool Starter::is_UpdateServersInfo_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_NotifyDaemonState_allowed
// 
// description : 	Execution allowed for NotifyDaemonState command.
//
//-----------------------------------------------------------------------------
bool Starter::is_NotifyDaemonState_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_HardKillServer_allowed
// 
// description : 	Execution allowed for HardKillServer command.
//
//-----------------------------------------------------------------------------
bool Starter::is_HardKillServer_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace Starter
