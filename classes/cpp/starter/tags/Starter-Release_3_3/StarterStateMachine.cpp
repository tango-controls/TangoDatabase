static const char *RcsId = "$Header$";
//+=============================================================================
//
// file :         StarterStateMachine.cpp
//
// description :  C++ source for the Starter and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author$
//
// $Revision$
//
// $Log$
// Revision 3.2  2005/04/21 07:18:48  pascal_verdier
// Add a little timeout for ping.
// Fix a bug for windows (SIGCHLD).
//
// Revision 3.1  2004/12/10 08:57:19  pascal_verdier
// Tango 5 compatibility (attribute management).
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <Starter.h>
#include <StarterClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace Starter_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		Starter::is_HostState_allowed
// 
// description : 	Read/Write allowed for HostState attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_HostState_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_RunningServers_allowed
// 
// description : 	Read/Write allowed for RunningServers attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_RunningServers_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_StoppedServers_allowed
// 
// description : 	Read/Write allowed for StoppedServers attribute.
//
//-----------------------------------------------------------------------------
bool Starter::is_StoppedServers_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStartAll_allowed
// 
// description : 	Execution allowed for DevStartAll command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStartAll_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStopAll_allowed
// 
// description : 	Execution allowed for DevStopAll command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStopAll_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevGetRunningServers_allowed
// 
// description : 	Execution allowed for DevGetRunningServers command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevGetRunningServers_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevGetStopServers_allowed
// 
// description : 	Execution allowed for DevGetStopServers command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevGetStopServers_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStart_allowed
// 
// description : 	Execution allowed for DevStart command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStart_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevStop_allowed
// 
// description : 	Execution allowed for DevStop command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevStop_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_DevReadLog_allowed
// 
// description : 	Execution allowed for DevReadLog command.
//
//-----------------------------------------------------------------------------
bool Starter::is_DevReadLog_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_UpdateServersInfo_allowed
// 
// description : 	Execution allowed for UpdateServersInfo command.
//
//-----------------------------------------------------------------------------
bool Starter::is_UpdateServersInfo_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Starter::is_NotifyDaemonState_allowed
// 
// description : 	Execution allowed for NotifyDaemonState command.
//
//-----------------------------------------------------------------------------
bool Starter::is_NotifyDaemonState_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace Starter
